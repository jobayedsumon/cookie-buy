import 'package:cookie_buy_cookies/helpers/alerts.dart';
import 'package:cookie_buy_cookies/helpers/constants.dart';
import 'package:cookie_buy_cookies/helpers/dioSingleton.dart';
import 'package:country_code_picker/country_code_picker.dart';
import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:otp_text_field/otp_field.dart';
import 'package:otp_text_field/style.dart';
import 'package:shared_preferences/shared_preferences.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({Key? key}) : super(key: key);

  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  var phoneNumber = '';
  var countryCode = '+880';
  var otp = '';
  var _dio = DioSingleton().dio;

  void verifyOTP(context) async {
    if (otp.isEmpty) {
      showError(context, 'Please enter the OTP');
      return;
    }

    try {
      var response = await Dio().post(
        '$baseUrl/auth/verify-otp',
        data: {'phone_number': '$countryCode$phoneNumber', 'otp': otp},
      );
      var data = response.data;
      if (data['success']) {
        var token = data['access_token'];
        var balance = data['balance'];
        _dio.options.headers['Authorization'] = 'Bearer $token';
        var prefs = await SharedPreferences.getInstance();
        prefs.setString('token', token);
        prefs.setDouble('balance', balance.toDouble());
        Navigator.pushNamedAndRemoveUntil(context, '/home', (route) => false);
      } else {
        showError(context, data['message']);
      }
    } catch (e) {
      print(e);
    }
  }

  void login() async {
    if (phoneNumber.isEmpty) {
      showError(context, 'Please enter your phone number');
      return;
    }

    try {
      var response = await Dio().post(
        '$baseUrl/auth/login',
        data: {
          'phone_number': countryCode + phoneNumber,
        },
      );
      var data = response.data;

      if (data['success']) {
        showOTPModal();
      } else {
        showError(context, data['message']);
      }
    } on DioError catch (e) {
      print(e);
    }
  }

  Future<dynamic> showOTPModal() {
    return showModalBottomSheet(
      context: context,
      builder: (context) => Container(
        height: 300,
        child: Padding(
          padding: const EdgeInsets.all(15.0),
          child: Column(
            children: [
              Text('SUBMIT OTP',
                  style: TextStyle(fontSize: 25, fontWeight: FontWeight.bold)),
              Text('OTP sent to your mobile number'),
              Text('$countryCode$phoneNumber'),
              OTPTextField(
                length: 4,
                width: MediaQuery.of(context).size.width,
                fieldWidth: 80,
                style: TextStyle(fontSize: 17),
                textFieldAlignment: MainAxisAlignment.spaceAround,
                fieldStyle: FieldStyle.underline,
                onCompleted: (pin) {
                  setState(() {
                    otp = pin;
                  });
                },
              ),
              SizedBox(height: 30),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.redAccent,
                  padding: EdgeInsets.symmetric(horizontal: 50, vertical: 10),
                ),
                onPressed: () {
                  verifyOTP(context);
                },
                child: Text(
                  'Verify',
                  style: TextStyle(fontSize: 20, color: Colors.white),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      body: Center(
        child: Column(
          children: [
            Container(
              height: MediaQuery.of(context).size.height * 0.5,
              color: Colors.redAccent,
              child: Image(
                image: AssetImage('assets/images/CookieLogo.png'),
              ),
            ),
            Container(
              height: MediaQuery.of(context).size.height * 0.5,
              child: Padding(
                padding: const EdgeInsets.all(15.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text('Good to see you :)',
                        style: TextStyle(
                            fontSize: 35.0, fontWeight: FontWeight.bold)),
                    Text(
                        'Please confirm your country code and enter your mobile number',
                        style: TextStyle(fontSize: 16.0)),
                    SizedBox(height: 20.0),
                    Row(
                      children: [
                        Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10.0),
                            border: Border.all(color: Colors.black45),
                          ),
                          child: Padding(
                            padding: const EdgeInsets.symmetric(vertical: 5.0),
                            child: CountryCodePicker(
                              onChanged: (value) {
                                setState(() {
                                  countryCode = value.dialCode!;
                                });
                              },
                              initialSelection: 'BD',
                              favorite: ['+880', 'BD'],
                              showCountryOnly: false,
                              showOnlyCountryWhenClosed: false,
                              alignLeft: false,
                            ),
                          ),
                        ),
                        SizedBox(width: 10.0),
                        Expanded(
                          child: TextField(
                            onChanged: (value) {
                              if (value.startsWith('0'))
                                setState(() {
                                  phoneNumber = value.substring(1);
                                });
                              else
                                setState(() {
                                  phoneNumber = value;
                                });
                            },
                            keyboardType: TextInputType.phone,
                            decoration: InputDecoration(
                              hintText: 'Mobile Number',
                              border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                    SizedBox(height: 30.0),
                    Center(
                      child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.redAccent,
                          padding: EdgeInsets.symmetric(
                              horizontal: 100.0, vertical: 15.0),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                        ),
                        onPressed: () {
                          login();
                        },
                        child: Text('Continue',
                            style:
                                TextStyle(fontSize: 20.0, color: Colors.white)),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
